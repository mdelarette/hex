{"version":3,"sources":["types/tile.tsx","data/tuile.tsx","helpers/deck.tsx","helpers/renderer.tsx","components/BackgroundCanvas.tsx","components/ForegroundCanvas.tsx","components/MessagesCanvas.tsx","components/TouchHelperCanvas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FieldType","tile_001","id","name","center","Water","edges","tuile2","Earth","tuile3","tuile4","tuile5","tuile6","tuile7","tuile8","tuile9","tuile10","tuile11","tuile12","tuile13","tile_014","tuile101","tuile102","tuile103","tuile104","tuile105","tuile106","tuile107","tuile108","tuile109","tuile110","tuile111","tuile112","tuile113","defaultPatterns","deck","tiles","tile","quantity","rotateArray","array","k","length","unshift","splice","i","cosPiSur6","Math","cos","PI","neighborhood","q","r","drawTile","ctx","position","size","patterns","innerLength","x","y","l","beginPath","moveTo","lineTo","closePath","fillStyle","fill","drawFilledHex","drawHex","strokeStyle","stroke","pointy_hex_to_pixel","tuile","sqrt","coordinates","coordinates_to_pixel","drawPlayFieldWithCoordinates","playField","tileSize","tuileInPlay","pos","canvas","width","height","computeSize","minMax","min","max","coef","reduce","accumulator","sizeForHeight","floor","sizeForWidth","mM","Number","MAX_VALUE","MIN_VALUE","BackgroundCanvas","playfield","useState","context","setContext","useEffect","document","getElementById","getContext","clearRect","style","border","zIndex","ForegroundCanvas","nextTile","onClick","onWheel","mousePos","setMousePos","onMouseMove","event","preventDefault","persist","newMousePos","clientX","clientY","nativeEvent","deltaY","MessagesCanvas","messages","font","remainingTiles","get","console","log","measureText","fillText","TouchHelperCanvas","playfieldNeighborhood","forEach","neighbor","testCoordinates","find","n","push","playFieldNeighborhood","drawPlayFieldNeighborhood","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","appBar","top","bottom","grow","canvasesContainer","App","classes","navigator","maxTouchPoints","touchMode","React","anchorEl","setAnchorEl","setWidth","setHeight","setTileSize","setNextTile","setRemainingTiles","setPlayfield","setMessages","window","innerWidth","innerHeight","initialWidth","initialHeight","topBar","scrollHeight","bottomBar","initialSize","shuffledDeck","j","random","temp","shuffleArray","map","t","a","flat","newMessages","Map","version","handleCloseMenu","Fragment","className","AppBar","Toolbar","IconButton","edge","color","aria-label","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","onKeyUpCapture","point","round","pixel_to_pointy_hex","undefined","counter","checkCoordinates","newPlayfield","newRemainingTiles","shift","newNextTile","newSize","warn","delta","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68a662c0.chunk.js","sourcesContent":["export enum FieldType {\r\n    Water = 0,\r\n    Earth,\r\n    Forest,\r\n    Desert\r\n  }\r\n\r\n\r\nexport interface Coordinates {\r\n    q: number;\r\n    r: number;\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface Tile {\r\n    id: number;\r\n    name?: string;\r\n\r\n    center: FieldType;\r\n    edges?: FieldType[];\r\n}\r\n\r\nexport interface TileWithCoordinates extends Tile {\r\n    coordinates: Coordinates;\r\n}\r\nexport interface QuantifiedTile {\r\n    tile:Tile;\r\n    quantity:number;\r\n}\r\nexport interface Deck {\r\n    tiles: QuantifiedTile[];\r\n}\r\n\r\nexport interface Playfield {\r\n    tiles: TileWithCoordinates[];\r\n}","\r\nimport { Tile, FieldType, Deck } from '../types/tile';\r\n\r\n\r\n\r\n\r\nconst tile_001: Tile = {\r\n  id: 1,\r\n  name: \"Toute eau\",\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile2: Tile = {\r\n  id: 2,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile3: Tile = {\r\n  id: 3,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile4: Tile = {\r\n  id: 4,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile5: Tile = {\r\n  id: 5,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile6: Tile = {\r\n  id: 6,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile7: Tile = {\r\n  id: 7,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile8: Tile = {\r\n  id: 8,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile9: Tile = {\r\n  id: 9,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile10: Tile = {\r\n  id: 10,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile11: Tile = {\r\n  id: 11,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile12: Tile = {\r\n  id: 12,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile13: Tile = {\r\n  id: 13,\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth],\r\n};\r\n\r\n\r\n\r\nconst tile_014: Tile = {\r\n  id: 14,\r\n  name: \"Toute eau simple\",\r\n  center: FieldType.Water,\r\n};\r\n\r\n\r\nconst tuile101: Tile = {\r\n  id: 101,\r\n  name: \"Ilot central\",\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile102: Tile = {\r\n  id: 102,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile103: Tile = {\r\n  id: 103,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile104: Tile = {\r\n  id: 104,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile105: Tile = {\r\n  id: 105,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile106: Tile = {\r\n  id: 106,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile107: Tile = {\r\n  id: 107,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile108: Tile = {\r\n  id: 108,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile109: Tile = {\r\n  id: 109,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile110: Tile = {\r\n  id: 110,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile111: Tile = {\r\n  id: 111,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Water, FieldType.Earth, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile112: Tile = {\r\n  id: 112,\r\n  center: FieldType.Earth,\r\n  edges: [FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Earth, FieldType.Water],\r\n};\r\n\r\nconst tuile113: Tile = {\r\n  id: 113,\r\n  name: \"Toute terre\",\r\n  center: FieldType.Earth\r\n};\r\n\r\n\r\n\r\nexport const defaultPatterns = ['#7dd1ff', '#a65a35'];\r\n\r\nconst deck:Deck = {tiles:[\r\n  { tile: tile_001, quantity: 3 },\r\n  { tile: tile_014, quantity: 1 },\r\n  { tile: tuile2, quantity: 1 },\r\n  { tile: tuile3, quantity: 1 },\r\n  { tile: tuile4, quantity: 1 },\r\n  { tile: tuile5, quantity: 1 },\r\n  { tile: tuile6, quantity: 1 },\r\n  { tile: tuile7, quantity: 1 },\r\n  { tile: tuile8, quantity: 1 },\r\n  { tile: tuile9, quantity: 1 },\r\n  { tile: tuile10, quantity: 1 },\r\n  { tile: tuile11, quantity: 1 },\r\n  { tile: tuile12, quantity: 1 },\r\n  { tile: tuile13, quantity: 1 },\r\n  { tile: tuile101, quantity: 3 },\r\n  { tile: tuile102, quantity: 1 },\r\n  { tile: tuile103, quantity: 1 },\r\n  { tile: tuile104, quantity: 1 },\r\n  { tile: tuile105, quantity: 1 },\r\n  { tile: tuile106, quantity: 1 },\r\n  { tile: tuile107, quantity: 1 },\r\n  { tile: tuile108, quantity: 1 },\r\n  { tile: tuile109, quantity: 1 },\r\n  { tile: tuile110, quantity: 1 },\r\n  { tile: tuile111, quantity: 1 },\r\n  { tile: tuile112, quantity: 1 },\r\n  { tile: tuile113, quantity: 1 },\r\n\r\n]};\r\n\r\nexport default deck;\r\n","export function shuffleArray(array:any) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    // Generate random number\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n// https://medium.com/javascript-in-plain-english/algorithms-101-rotate-array-in-javascript-three-solutions-260fbc923b64\r\nexport function rotateArray(array:any, k:number) {\r\n  if (array.length > k) {\r\n    array.unshift(...array.splice(-k));\r\n  } else {\r\n    let i = 0;\r\n    while (i < k) {\r\n      array.unshift(array.splice(-1));\r\n      i++;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","\r\nimport { Tile, Point, TileWithCoordinates, Coordinates, Playfield } from '../types/tile';\r\n\r\nconst cosPiSur6 = Math.cos(Math.PI / 6);\r\nconst sinPiSur6 = 1 / 2; // (1/2)\r\n\r\n\r\nexport const neighborhood = [\r\n\t{q: +1, r: 0},\t{q: +1, r: -1},\t{q: 0, r: -1}, {q: -1, r: 0}, {q: -1, r: +1}, {q: 0, r: +1},\r\n];\r\n\r\nexport function drawTile(ctx:CanvasRenderingContext2D , position:Point, size:number, tile:Tile, patterns:string[]) {\r\n  // console.log(\"drawTuile\", tuile, \" at \", x , \"x\", y);\r\n\r\n  if(!tile)\r\n  {\r\n    drawFilledHex(ctx, position, size, \"red\");\r\n    return;\r\n  }\r\n\r\n  if(!tile.edges)\r\n  {\r\n    drawFilledHex(ctx, position, size, patterns[tile.center]);\r\n    return;\r\n  }\r\n\r\n  const innerLength = size / 3;\r\n\r\n  const x = position.x;\r\n  const y = position.y;\r\n  const l = size;\r\n\r\n\r\n  // Gauche\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = patterns[tile.edges[0]];\r\n\r\n  ctx.fill();\r\n\r\n  // Bas gauche\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x, y + l);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[1]];\r\n  ctx.fill();\r\n\r\n  // Bas droit\r\n  ctx.beginPath();\r\n  ctx.moveTo(x, y + l);\r\n  ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[2]];\r\n  ctx.fill();\r\n\r\n  // Droite\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[3]];\r\n  ctx.fill();\r\n\r\n  // Haut droit\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[4]];\r\n  ctx.fill();\r\n\r\n  // Haut gauche\r\n  ctx.beginPath();\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[5]];\r\n  ctx.fill();\r\n\r\n  // Hexagone central\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = patterns[tile.center];\r\n\r\n  ctx.fill();\r\n}\r\n\r\n// function drawCircle(ctx, x, y, l) {\r\n//   ctx.beginPath();\r\n//   ctx.arc(x, y, l, 0, 2 * Math.PI);\r\n//   ctx.stroke();\r\n// }\r\n\r\nfunction drawHex(ctx:CanvasRenderingContext2D, position:Point, size:number) {\r\n  \r\n  const x = position.x;\r\n  const y = position.y;\r\n  const l = size;\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x, y + l);\r\n  ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.closePath();\r\n\r\n  ctx.strokeStyle = \"black\";\r\n  ctx.stroke();\r\n}\r\n\r\nfunction drawFilledHex(ctx:CanvasRenderingContext2D, position:Point, size:number, fillStyle:string) {\r\n\r\n  const x = position.x;\r\n  const y = position.y;\r\n  const l = size;\r\n\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x, y + l);\r\n  ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = fillStyle;\r\n  ctx.fill();\r\n}\r\n\r\n// function drawSimpleTuile(ctx, x, y, l) {\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x, y + l);\r\n//   ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"orange\";\r\n//   ctx.fill();\r\n\r\n//   let innerLength = l / 3;\r\n\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"red\";\r\n//   ctx.fill();\r\n// }\r\n\r\n// function drawTuile(ctx, x, y, l, tuile, patterns) {\r\n//   // console.log(\"drawTuile\", tuile, \" at \", x , \"x\", y);\r\n\r\n//   let innerLength = l / 3;\r\n\r\n//   // Gauche\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"orange\";\r\n\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[0]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n\r\n//   ctx.fill();\r\n\r\n//   // Bas gauche\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x, y + l);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"red\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[1]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Bas droit\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x, y + l);\r\n//   ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"blue\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[2]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Droite\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"green\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[3]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Haut droit\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"pink\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[4]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Haut gauche\r\n//   ctx.beginPath();\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"yellow\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[5]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Hexagone central\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"brown\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.centre];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n// }\r\n\r\n\r\n// export function drawPlayField(ctx:CanvasRenderingContext2D, playField) {\r\n//   for (let i = 0; i < playField.length; i++) {\r\n//     let tuileInPlay = playField[i];\r\n//     drawTile(\r\n//       ctx,\r\n//       tuileInPlay.mousePos.x,\r\n//       tuileInPlay.mousePos.y,\r\n//       50,\r\n//       tuileInPlay.tuile\r\n//     );\r\n//   }\r\n// }\r\n\r\n// https://www.redblobgames.com/grids/hexagons/#pixel-to-hex\r\nexport function pixel_to_pointy_hex(point:Point, size:number) {\r\n  var q = ((Math.sqrt(3) / 3) * point.x - (1 / 3) * point.y) / size;\r\n  var r = ((2 / 3) * point.y) / size;\r\n\r\n  return { q: Math.round(q), r: Math.round(r) };\r\n  // {\r\n  // q: Math.round(q),\r\n  // r: Math.round(r)\r\n  // };\r\n}\r\n\r\n// https://www.redblobgames.com/grids/hexagons/#neighbors-axial\r\n// https://www.redblobgames.com/grids/hexagons/#hex-to-pixel-axial\r\n\r\nfunction pointy_hex_to_pixel(tuile:TileWithCoordinates, size:number) {\r\n  var x =\r\n    size *\r\n    (Math.sqrt(3) * tuile.coordinates.q +\r\n      (Math.sqrt(3) / 2) * tuile.coordinates.r);\r\n  var y = size * ((3 / 2) * tuile.coordinates.r);\r\n  return { x, y };\r\n}\r\nfunction coordinates_to_pixel(coordinates:Coordinates, size:number) {\r\n  var x =\r\n    size *\r\n    (Math.sqrt(3) * coordinates.q +\r\n      (Math.sqrt(3) / 2) * coordinates.r);\r\n  var y = size * ((3 / 2) * coordinates.r);\r\n  return { x, y };\r\n}\r\n\r\nexport function drawPlayFieldWithCoordinates(ctx:CanvasRenderingContext2D, playField:Playfield, tileSize:number, patterns:string[]) {\r\n  for (let i = 0; i < playField.tiles.length; i++) {\r\n    let tuileInPlay = playField.tiles[i];\r\n    var pos = pointy_hex_to_pixel(tuileInPlay, tileSize);\r\n    drawTile(\r\n      ctx,\r\n      { x: ctx.canvas.width / 2 + pos.x, y:ctx.canvas.height / 2 + pos.y},\r\n      tileSize,\r\n      tuileInPlay,\r\n      patterns\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport function drawPlayFieldNeighborhood(ctx:CanvasRenderingContext2D, playFieldNeighborhood:Coordinates[], tileSize:number) {\r\n  for (let i = 0; i < playFieldNeighborhood.length; i++) {\r\n    let coordinates = playFieldNeighborhood[i];\r\n    var pos = coordinates_to_pixel(coordinates, tileSize);\r\n    drawHex(\r\n      ctx,\r\n      { x: ctx.canvas.width / 2 + pos.x, y:ctx.canvas.height / 2 + pos.y},\r\n      tileSize\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function computeSize(playField:Playfield, width:number, height:number) {\r\n  \r\n  // Size for height\r\n\tlet minMax = { min: 0, max: 0};\r\n\t\r\n\tminMax = playField.tiles.reduce((accumulator, tuile) => {return { min: Math.min(accumulator.min, tuile.coordinates.r), max: Math.max(accumulator.max, tuile.coordinates.r)};}, minMax);\r\n\t\t\r\n\tlet nb = minMax.max + (-minMax.min) + 1 + 2;\r\n\r\n\t// let coef = 2 + (nb-1) * (1 + Math.sin(Math.PI/6));\r\n  let coef = 2 + (nb-1) * 1.5;\r\n  \r\n  let sizeForHeight = Math.floor(height/coef);\r\n\r\n  // Size for width\r\n  let sizeForWidth = width / 6 / cosPiSur6;\r\n  sizeForWidth = Math.floor(sizeForWidth);\r\n\r\n  if(playField.tiles.length > 0)\r\n  {\r\n    let mM = { min: Number.MAX_VALUE, max: Number.MIN_VALUE};\r\n    for(let i = 0; i<playField.tiles.length; i++ )\r\n    {\r\n      let pos = pointy_hex_to_pixel(playField.tiles[i], 10); // size does not matter\r\n      mM.min = Math.min(pos.x, mM.min);\r\n      mM.max = Math.max(pos.x, mM.max);\r\n    }\r\n    let nb = (mM.max - mM.min + 2 * 10 * cosPiSur6)/(2 * 10 * cosPiSur6) +2;\r\n    sizeForWidth = width / (nb * 2) / cosPiSur6;\r\n    sizeForWidth = Math.floor(sizeForWidth);\r\n  }\r\n\treturn Math.min(sizeForHeight, sizeForWidth);\r\n}","import React from 'react';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport { Playfield } from '../types/tile';\r\n\r\nimport {drawPlayFieldWithCoordinates} from '../helpers/renderer';\r\n\r\n\r\nconst BackgroundCanvas: React.FC<{width:number, height:number, patterns: string[], playfield:Playfield, tileSize:number}> = ({width, height, patterns, playfield, tileSize}) => {\r\n       \r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        let c:HTMLCanvasElement|null = document.getElementById(\"background\") as HTMLCanvasElement;        \r\n        let ctx = c.getContext(\"2d\");\r\n        setContext(ctx);\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Canvas size', width, height);\r\n    // }, [width, height]);\r\n       \r\n    \r\n\r\n    useEffect(() => {       \r\n        if(playfield && context)\r\n        {\r\n            context.clearRect(0,0,width,height);\r\n            drawPlayFieldWithCoordinates(context, playfield, tileSize, patterns );\r\n        } \r\n\r\n    }, [playfield, context, width, height, tileSize, patterns]);\r\n    \r\n\r\n\r\n    return (\r\n        <canvas\r\n            id={\"background\"}\r\n            width={width} \r\n            height={height} \r\n            style={{border:\"1px solid #000000\", position: \"absolute\", zIndex: 0}}\r\n        />\r\n    );\r\n}\r\n\r\n  \r\nexport default BackgroundCanvas;","import React from 'react';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport { Tile, Playfield } from '../types/tile';\r\n\r\n// import {drawSimpleTuile} from '../helpers/renderer';\r\nimport {drawTile} from '../helpers/renderer';\r\nimport {drawPlayFieldWithCoordinates} from '../helpers/renderer';\r\n\r\n\r\nconst ForegroundCanvas: React.FC<{width:number, height:number, nextTile: Tile | null, patterns: string[], onClick:Function | null, onWheel:Function | null, playfield:Playfield|null, tileSize:number}> = ({width, height, nextTile, patterns, onClick, onWheel, playfield, tileSize}) => {\r\n    \r\n    const [mousePos, setMousePos] = useState({x: 0, y: 0});\r\n    \r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        let c:HTMLCanvasElement|null = document.getElementById(\"foreground\") as HTMLCanvasElement;        \r\n        let ctx = c.getContext(\"2d\");\r\n        setContext(ctx);\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Canvas size', width, height);\r\n    // }, [width, height]);\r\n    \r\n    \r\n    useEffect(() => {        \r\n        if(context && mousePos.x && mousePos.y)\r\n        {\r\n            context.clearRect(0,0,width,height);\r\n            if(nextTile)\r\n            {\r\n                drawTile(context, mousePos, tileSize, nextTile, patterns);\r\n            }\r\n        }\r\n\r\n    }, [mousePos, width, height, context, nextTile, patterns, tileSize]);\r\n\r\n    \r\n\r\n    useEffect(() => {       \r\n        if(playfield && context)\r\n        {\r\n            context.clearRect(0,0,width,height);\r\n            drawPlayFieldWithCoordinates(context, playfield, tileSize, patterns );\r\n        } \r\n\r\n    }, [playfield, context, width, height, tileSize, patterns]);\r\n    \r\n\r\n\r\n    const handleMouseMove = (event:React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        \r\n        let newMousePos = {x: event.clientX, y: event.clientY};\r\n\r\n        setMousePos(newMousePos);\r\n    }\r\n    \r\n    const handleClick = (event:React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        \r\n        let newMousePos = {x: event.clientX, y: event.clientY};\r\n        setMousePos(newMousePos);\r\n        if(onClick)\r\n        {\r\n            onClick(newMousePos);\r\n        }\r\n    }\r\n    \r\n    const handleWheel = (event:React.MouseEvent<HTMLCanvasElement, WheelEvent>) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        if(onWheel)\r\n        {\r\n            onWheel(event.nativeEvent.deltaY);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <canvas\r\n            id={\"foreground\"} \r\n            width={width} \r\n            height={height} \r\n            style={{border:\"1px solid #000000\", position: \"absolute\", zIndex: 3}}\r\n\r\n\r\n            onMouseMove={handleMouseMove}\r\n            onWheel={handleWheel}\r\n            onClick={handleClick}\r\n        />\r\n    );\r\n}\r\n\r\n  \r\nexport default ForegroundCanvas;","import React from 'react';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport { Tile, Playfield } from '../types/tile';\r\n\r\n// import {drawSimpleTuile} from '../helpers/renderer';\r\nimport {drawTile} from '../helpers/renderer';\r\nimport {drawPlayFieldWithCoordinates} from '../helpers/renderer';\r\n\r\n\r\nconst MessagesCanvas: React.FC<{width:number, height:number, messages: Map<string,string> | null}> = ({width, height, messages}) => {\r\n    \r\n    const [mousePos, setMousePos] = useState({x: 0, y: 0});\r\n    \r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        let c:HTMLCanvasElement|null = document.getElementById(\"messages\") as HTMLCanvasElement;        \r\n        let ctx = c.getContext(\"2d\");\r\n        if(ctx)\r\n        {\r\n            ctx.font = \"24px Parisienne\";\r\n            // ctx.font = \"24px Sansita Swashed\";\r\n            // ctx.font = \"24px Roboto Mono\";\r\n        }\r\n\r\n        setContext(ctx);\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Canvas size', width, height);\r\n    // }, [width, height]);\r\n    \r\n    \r\n    \r\n    useEffect(() => {       \r\n        if(messages && context)\r\n        {\r\n            // let name = messages.get(\"name\");\r\n            let remainingTiles = messages.get(\"remainingTiles\");\r\n\r\n            // console.log(\"useEffect messages name\", name);\r\n            console.log(\"useEffect messages remainingTiles\", remainingTiles);\r\n\r\n            context.clearRect(0,0,width,height);\r\n            \r\n            // if(name)\r\n            // {\r\n            //     context.fillText(name, 0, 30);\r\n            // }\r\n            if(remainingTiles)\r\n            {\r\n                let measureText = context.measureText(remainingTiles);\r\n                context.fillText(remainingTiles, (width - measureText.width), 30);\r\n            }\r\n        } \r\n\r\n    }, [messages, context, width, height]);\r\n\r\n\r\n    return (\r\n        <canvas\r\n            id={\"messages\"} \r\n            width={width} \r\n            height={height} \r\n            style={{border:\"1px solid #000000\", position: \"absolute\", zIndex: 1}}\r\n        />\r\n    );\r\n}\r\n\r\n  \r\nexport default MessagesCanvas;","import React from 'react';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport { Playfield } from '../types/tile';\r\n\r\nimport {neighborhood, drawPlayFieldWithCoordinates, drawPlayFieldNeighborhood} from '../helpers/renderer';\r\n\r\n\r\nconst TouchHelperCanvas: React.FC<{width:number, height:number, playfield:Playfield, tileSize:number}> = ({width, height, playfield, tileSize}) => {\r\n       \r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        let c:HTMLCanvasElement|null = document.getElementById(\"touchHelper\") as HTMLCanvasElement;        \r\n        let ctx = c.getContext(\"2d\");\r\n        setContext(ctx);\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Canvas size', width, height);\r\n    // }, [width, height]);\r\n       \r\n    \r\n\r\n    useEffect(() => {       \r\n        if(playfield && context)\r\n        {\r\n            // Build neighborhood\r\n            let playfieldNeighborhood = [{q:0, r:0}];\r\n            if(playfield.tiles.length > 0)\r\n            {\r\n                playfieldNeighborhood = [];\r\n                playfield.tiles.forEach(tile => {\r\n                    neighborhood.forEach(neighbor => {\r\n                        let testCoordinates = {q:tile.coordinates.q + neighbor.q, r:tile.coordinates.r + neighbor.r}\r\n\r\n                        let inNeighborhood = playfieldNeighborhood.find(n => n.q === testCoordinates.q && n.r === testCoordinates.r);\r\n                        if(!inNeighborhood)\r\n                        {\r\n                            let inPlayfield = playfield.tiles.find(n => n.coordinates.q === testCoordinates.q && n.coordinates.r === testCoordinates.r);\r\n\r\n                            if(!inPlayfield)\r\n                            {\r\n                                playfieldNeighborhood.push(testCoordinates);\r\n                            }\r\n                        }\r\n\r\n                    });\r\n                });\r\n            }\r\n\r\n            console.log('playfieldNeighborhood tileSize',tileSize,  playfieldNeighborhood);\r\n\r\n            // Display neighborhood\r\n\r\n            console.log('context', context);\r\n            let c:HTMLCanvasElement|null = document.getElementById(\"touchHelper\") as HTMLCanvasElement;        \r\n            let ctx = c.getContext(\"2d\");\r\n            if(ctx){\r\n\r\n                ctx.clearRect(0,0,width,height);\r\n                // context.fillStyle = \"white\";\r\n                // context.fillRect(0,0,width,height);\r\n    \r\n                drawPlayFieldNeighborhood(ctx, playfieldNeighborhood, tileSize );\r\n            }\r\n        } \r\n\r\n    }, [playfield, context, width, height, tileSize]);\r\n    \r\n\r\n\r\n    return (\r\n        <canvas\r\n            id={\"touchHelper\"}\r\n            width={width} \r\n            height={height} \r\n            style={{border:\"1px solid #000000\", position: \"absolute\", zIndex: 2}}\r\n        />\r\n    );\r\n}\r\n\r\n  \r\nexport default TouchHelperCanvas;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport TouchAppIcon from '@material-ui/icons/TouchAppTwoTone';\r\nimport MouseIcon from '@material-ui/icons/MouseTwoTone';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeftTwoTone';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRightTwoTone';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport { name, version } from \"../package.json\";\r\n\r\nimport deck from '../src/data/tuile';\r\nimport { defaultPatterns } from '../src/data/tuile';\r\n\r\nimport { shuffleArray, rotateArray } from './helpers/deck';\r\n\r\nimport { computeSize, pixel_to_pointy_hex, neighborhood } from '../src/helpers/renderer';\r\n\r\n\r\n\r\nimport BackgroundCanvas from './components/BackgroundCanvas';\r\nimport ForegroundCanvas from './components/ForegroundCanvas';\r\nimport MessagesCanvas from './components/MessagesCanvas';\r\nimport TouchHelperCanvas from './components/TouchHelperCanvas';\r\n\r\n\r\nimport { Tile, Point, Playfield } from './types/tile';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    canvasesContainer: {\r\n      position: 'absolute'\r\n    },\r\n\r\n  }),\r\n);\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [touchMode, setTouchMode] = useState(navigator.maxTouchPoints > 0);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const [width, setWidth] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n\r\n  \r\n  const [tileSize, setTileSize] = useState(25);\r\n\r\n  const [nextTile, setNextTile] = useState<Tile | null>(null);\r\n  const [remainingTiles, setRemainingTiles] = useState<number[]>([]);\r\n\r\n  const [playfield, setPlayfield] = useState<Playfield>({tiles: []});\r\n\r\n  const [messages, setMessages] = useState<Map<string,string> | null>(null);\r\n\r\n  useEffect(() => {    \r\n      console.log('Window initial size', window.innerWidth, window.innerHeight);\r\n\r\n      let initialWidth = window.innerWidth -2; //-2 for border\r\n      let initialHeight = window.innerHeight -2; //-2 for border\r\n\r\n      let topBar = document.getElementById('topBar');\r\n      if(topBar)\r\n      {\r\n        initialHeight = initialHeight - topBar.scrollHeight;\r\n      }\r\n      let bottomBar = document.getElementById('bottomBar');\r\n      if(bottomBar)\r\n      {\r\n        initialHeight = initialHeight - bottomBar.scrollHeight;\r\n      }\r\n\r\n      console.log('Canvas initial size', initialWidth, initialHeight);\r\n\r\n      setWidth(initialWidth);\r\n      setHeight(initialHeight);\r\n\r\n      let initialSize = computeSize({tiles:[]}, window.innerWidth, window.innerHeight);\r\n      setTileSize(initialSize);\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(deck);\r\n\r\n    let flattedDeck = deck.tiles.map(t => {\r\n      let a = [];\r\n      for(var i = 0; i<t.quantity; i++) {\r\n        a.push(t.tile.id);\r\n      }\r\n      return a;\r\n    }).flat();\r\n  \r\n  \r\n    let shuffledDeck = shuffleArray(flattedDeck);\r\n  \r\n    console.log(\"shuffledDeck\", shuffledDeck);\r\n  \r\n    let tile = deck.tiles.find(x => x.tile.id === shuffledDeck[0]);\r\n    let nextTile = tile ? tile.tile : null;\r\n    \r\n    var newMessages = new Map([\r\n      [ \"name\", `${name} - ${version}` ],\r\n      [ \"remainingTiles\", `${shuffledDeck.length}` ]\r\n    ]);\r\n\r\n    console.log(\"initial messages\", newMessages);\r\n\r\n    setNextTile(nextTile);\r\n    setMessages(newMessages);\r\n    setRemainingTiles(shuffledDeck);\r\n\r\n  }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n//     var isMobile = navigator.userAgent.toLowerCase().match(/mobile/i);\r\n\r\n//     if (isMobile) {\r\n//       console.log('isMobile', true);\r\n//     } else {\r\n//       console.log('isMobile', false);\r\n//     }    \r\n//     console.log('maxTouchPoints ?', navigator.maxTouchPoints);\r\n// }, []);\r\n\r\n\r\n// const handleCtrlZ = () => {\r\n  \r\n//   console.log(\"handleCtrlZ\", playfield.tiles.length);\r\n//   if(playfield.tiles.length > 0)\r\n//   {\t\t\r\n\r\n//     let newPlayfield = {...playfield, tiles:[...playfield.tiles]};\r\n \r\n\r\n//     let newNextTile = newPlayfield.tiles.pop() as Tile;\r\n    \r\n//     let newRemainingTiles = [newNextTile.id, ...remainingTiles];\r\n    \r\n    \r\n//     let newTileSize = computeSize(newPlayfield, width, height);\r\n    \r\n//     setNextTile(newNextTile);\r\n//     setPlayfield(newPlayfield);\r\n//     setRemainingTiles(newRemainingTiles);\r\n//     setTileSize(newTileSize);\r\n\r\n//   }\r\n// }\r\n\r\n// useEffect(() => {\r\n\r\n//   document.addEventListener('keyup', (e) => {\t\r\n//     console.log(\"keyup\", e);\r\n//     // Canceling last round\r\n//     if(e.key === 'z' && e.ctrlKey)\r\n//     {\t\t\r\n\r\n//       handleCtrlZ();\r\n//     }\r\n  \r\n//   }); \r\n// }, [handleCtrlZ]);\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  var newMessages = new Map([\r\n    [ \"name\", `${name} - ${version}` ],\r\n    [ \"remainingTiles\", `${remainingTiles.length}` ]\r\n  ]);\r\n\r\n  // var newMessages = new Map(messages as Map<string, string>);\r\n  // newMessages.set(\"remainingTiles\", `${remainingTiles.length}`);\r\n\r\n\r\n  setMessages(newMessages);\r\n}, [remainingTiles.length]);\r\n\r\nconst handleClickMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n  setAnchorEl(event.currentTarget);\r\n};\r\n\r\nconst handleCloseMenu = () => {\r\n  setAnchorEl(null);\r\n};\r\n\r\n\r\n  const handleClick = (position:Point) => {    \r\n    console.log(\"handleClick in app\", position);\r\n\r\n    if(!nextTile)\r\n    {\r\n      console.log(\"No tile to add\");\r\n      return;\r\n    }\r\n    \r\n\t\tvar coordinates = {q: 0, r: 0};\r\n\t\tif(playfield.tiles.length !== 0){\r\n\t\t\tcoordinates = pixel_to_pointy_hex({x: position.x - width/2, y: position.y - height/2}, tileSize);\r\n\t\t}\r\n\t\t\r\n\t\t// Test that space is free\r\n\t\tlet inoccupied = playfield.tiles.find(t => t.coordinates.q === coordinates.q && t.coordinates.r === coordinates.r) === undefined;\t\t\r\n\t\tif(!inoccupied)\r\n\t\t{\r\n\t\t\tconsole.warn(\"Already something here : \", coordinates);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// Test that space is adjacent\r\n\t\tif(playfield.tiles.length !== 0){\r\n\t\t\tlet counter = 0;\r\n\t\t\tlet neighbor = false;\r\n\t\t\tdo {\r\n        let checkCoordinates = {q: coordinates.q + neighborhood[counter].q, r: coordinates.r + neighborhood[counter].r };\r\n        neighbor = playfield.tiles.find(t => t.coordinates.q === checkCoordinates.q && t.coordinates.r === checkCoordinates.r) !== undefined ;\r\n\t\t\t\tcounter++;\r\n\t\t\t} while (!neighbor && (counter < neighborhood.length));\r\n\t\t\tif(!neighbor)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet newPlayfield = {...playfield, tiles: [...playfield.tiles, {...nextTile as Tile, coordinates}]};\r\n    \r\n    let newRemainingTiles = [...remainingTiles];\r\n\t\tif(newRemainingTiles.length > 0)\r\n\t\t{\r\n\t\t\tnewRemainingTiles.shift();\r\n      const newNextTile = deck.tiles.find(x => x.tile.id === newRemainingTiles[0])?.tile;\r\n      \r\n      setNextTile(newNextTile ? newNextTile : null);\r\n      // console.log('newNextTile', newNextTile);\r\n    }\r\n    else {\r\n      setNextTile(null);\r\n    }\r\n\t\t\r\n\t\t// console.log('newRemainingTiles', newRemainingTiles);\r\n\t\t// console.log('newPlayfield', newPlayfield);\r\n\t\t\r\n\t\tlet newSize = computeSize(newPlayfield, width, height);\r\n    \r\n    setTileSize(newSize);\r\n    setPlayfield(newPlayfield);\r\n    setRemainingTiles(newRemainingTiles);\r\n}\r\n\r\n\r\nconst handleWheel = (delta:Number) => {    \r\n  console.log(\"handleWheel in app\", delta);\r\n\r\n  if(!nextTile)\r\n  {\r\n    console.log(\"No tile to rotate\");\r\n    return;\r\n  }\r\n\r\n  if(!nextTile.edges)\r\n  {\r\n    console.log(\"Tile as no edges\");\r\n    return;\r\n  }\r\n\r\n  let newNextTile = {\r\n    ...nextTile,  \r\n    edges: rotateArray(nextTile.edges, delta > 0 ? -1 : 1)\r\n  };\r\n\r\n  setNextTile(newNextTile);\r\n}\r\n\r\n\r\nconst handleKeyUpCapture = (event:React.KeyboardEvent<HTMLElement>) => {\r\n  event.preventDefault();\r\n  event.persist();\r\n\r\n  console.log(\"handleKeyUpCapture event\", event);\r\n\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <AppBar id={\"topBar\"} position=\"static\">\r\n          <Toolbar>\r\n\r\n            <div>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleClickMenu}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleCloseMenu}\r\n              >\r\n                <MenuItem onClick={handleCloseMenu}>New game</MenuItem>\r\n                <MenuItem onClick={handleCloseMenu}>Undo</MenuItem>\r\n              </Menu>\r\n          </div>  \r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n            {`${name} - ${version}`}\r\n            </Typography>\r\n\r\n            \r\n\r\n            {touchMode && (            \r\n              <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"touchApp\">\r\n                <TouchAppIcon /> {navigator.maxTouchPoints}\r\n              </IconButton>            \r\n            )}\r\n            \r\n            {!touchMode && (            \r\n              <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"mouseApp\">\r\n                <MouseIcon />\r\n              </IconButton>            \r\n            )}\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n\r\n        {width && height && (\r\n        <div id={\"canvasesContainer\"} className={classes.canvasesContainer} onKeyUpCapture={handleKeyUpCapture}>\r\n\r\n          <BackgroundCanvas width={width} height={height}  patterns={defaultPatterns} playfield={playfield} tileSize={tileSize} />\r\n          <MessagesCanvas width={width} height={height} messages={messages}/>\r\n\r\n          {touchMode && (<TouchHelperCanvas width={width} height={height} playfield={playfield} tileSize={tileSize} />)}\r\n          {!touchMode && (<TouchHelperCanvas width={width} height={height} playfield={playfield} tileSize={tileSize} />)}\r\n          \r\n\r\n          <ForegroundCanvas width={width} height={height}  nextTile={nextTile} patterns={defaultPatterns} onClick={handleClick}  onWheel={handleWheel} playfield={null} tileSize={tileSize}/>\r\n        </div>\r\n      )}\r\n\r\n        \r\n      {touchMode && (\r\n        <AppBar id={\"bottomBar\"} position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"rotate left\">\r\n              <RotateLeftIcon />\r\n            </IconButton>\r\n            <div className={classes.grow} />\r\n              NextTile\r\n            <div className={classes.grow} />\r\n            <IconButton edge=\"end\" color=\"inherit\" aria-label=\"rotate right\">\r\n              <RotateRightIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>      \r\n      )} \r\n        \r\n\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}