{"version":3,"sources":["types/tile.tsx","data/tuile.tsx","helpers/renderer.tsx","components/Canvas.tsx","App.tsx","data/deck.js","serviceWorker.ts","index.tsx"],"names":["FieldType","tile_001","id","name","center","Water","edges","tile_014","defaultPatterns","deck","tiles","tile","quantity","cosPiSur6","Math","cos","PI","drawTile","ctx","position","size","patterns","innerLength","x","y","l","fillStyle","drawFilledHex","beginPath","moveTo","lineTo","closePath","fill","pointy_hex_to_pixel","tuile","sqrt","coordinates","q","r","computeSize","playField","width","height","minMax","min","max","coef","reduce","accumulator","sizeForHeight","floor","sizeForWidth","length","mM","Number","MAX_VALUE","MIN_VALUE","i","pos","Canvas","zIndex","nextTile","onClick","playfield","tileSize","useState","mousePos","setMousePos","context","setContext","useEffect","document","getElementById","getContext","font","console","log","clearRect","tuileInPlay","canvas","drawPlayFieldWithCoordinates","measureText","strokeText","fillText","style","border","onMouseMove","event","preventDefault","persist","newMousePos","clientX","clientY","neighborhood","App","setWidth","setHeight","setTileSize","setNextTile","remainingTiles","setRemainingTiles","setPlayfield","window","innerWidth","innerHeight","initialSize","shuffledDeck","array","j","random","temp","shuffleArray","map","t","a","push","flat","find","isMobile","navigator","userAgent","toLowerCase","match","maxTouchPoints","Fragment","point","round","pixel_to_pointy_hex","undefined","counter","neighbor","checkCoordinates","warn","newPlayfield","newRemainingTiles","shift","newNextTile","newSize","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gJAAYA,E,6EAAAA,O,iBAAAA,I,iBAAAA,I,mBAAAA,I,oBAAAA,M,KCMZ,IAAMC,EAAiB,CACrBC,GAAI,EACJC,KAAM,YACNC,OAAQJ,EAAUK,MAClBC,MAAO,CAACN,EAAUK,MAAOL,EAAUK,MAAOL,EAAUK,MAAOL,EAAUK,MAAOL,EAAUK,MAAOL,EAAUK,QA6EnGE,EAAiB,CACrBL,GAAI,GACJC,KAAM,mBACNC,OAAQJ,EAAUK,OAyFPG,EAAkB,CAAC,UAAW,WAgC5BC,EA9BG,CAACC,MAAM,CACvB,CAAEC,KAAMV,EAAUW,SAAU,GAC5B,CAAED,KAAMJ,EAAUK,SAAU,KCpL9B,IAAMC,EAAYC,KAAKC,IAAID,KAAKE,GAAK,GAG9B,SAASC,EAASC,EAA+BC,EAAgBC,EAAaT,EAAWU,GAG9F,IAAMC,EAAcF,EAAO,EAErBG,EAAIJ,EAASI,EACbC,EAAIL,EAASK,EACbC,EAAIL,EAEV,GAAIT,EAAJ,CAMA,IAAIA,EAAKL,MAIP,OAFAY,EAAIQ,UAAYL,EAASV,EAAKP,aAC9BuB,EAAcT,EAAKC,EAAUC,GAM/BF,EAAIU,YACJV,EAAIW,OAAON,EAAIE,EAAIZ,EAAWW,EA3Bd,GA2BkBC,GAClCP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EA5Bd,GA4BkBC,GAClCP,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA7BxB,GA6B4BF,GAC5CJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA9BxB,GA8B4BF,GAC5CJ,EAAIa,YAEJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IAEpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIW,OAAON,EAAIE,EAAIZ,EAAWW,EAvCd,GAuCkBC,GAClCP,EAAIY,OAAOP,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA1CxB,GA0C4BF,GAC5CJ,EAAIa,YACJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IACpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIW,OAAON,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EAlDd,GAkDkBC,GAClCP,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EAnDxB,GAmD4BF,GAC5CJ,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIa,YACJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IACpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIW,OAAON,EAAIE,EAAIZ,EAAWW,EA3Dd,GA2DkBC,GAClCP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EA5Dd,GA4DkBC,GAClCP,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA7DxB,GA6D4BF,GAC5CJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA9DxB,GA8D4BF,GAC5CJ,EAAIa,YACJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IACpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIW,OAAON,EAAIE,EAAIZ,EAAWW,EArEd,GAqEkBC,GAClCP,EAAIY,OAAOP,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EAxExB,GAwE4BF,GAC5CJ,EAAIa,YACJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IACpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIY,OAAOP,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EAhFd,GAgFkBC,GAClCP,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EAjFxB,GAiF4BF,GAC5CJ,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIa,YACJb,EAAIQ,UAAYL,EAASV,EAAKL,MAAM,IACpCY,EAAIc,OAGJd,EAAIU,YACJV,EAAIW,OAAON,EAAID,EAAcT,EAAWW,EAzFxB,GAyF4BF,GAC5CJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA1FxB,GA0F4BF,GAC5CJ,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA5FxB,GA4F4BF,GAC5CJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA7FxB,GA6F4BF,GAC5CJ,EAAIY,OAAOP,EAAGC,EAAIF,GAClBJ,EAAIY,OAAOP,EAAID,EAAcT,EAAWW,EA/FxB,GA+F4BF,GAC5CJ,EAAIa,YAEJb,EAAIQ,UAAYL,EAASV,EAAKP,QAE9Bc,EAAIc,YAvFFL,EAAcT,EAAKC,EAAUC,GA6GjC,SAASO,EAAcT,EAA8BC,EAAgBC,GAEnE,IAAMG,EAAIJ,EAASI,EACbC,EAAIL,EAASK,EACbC,EAAIL,EAEVF,EAAIU,YAEJV,EAAIW,OAAON,EAAIE,EAAIZ,EAAWW,EAlId,GAkIkBC,GAClCP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EAnId,GAmIkBC,GAClCP,EAAIY,OAAOP,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EArId,GAqIkBC,GAClCP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EAtId,GAsIkBC,GAClCP,EAAIY,OAAOP,EAAGC,EAAIC,GAClBP,EAAIY,OAAOP,EAAIE,EAAIZ,EAAWW,EAxId,GAwIkBC,GAElCP,EAAIa,YAEJb,EAAIQ,UAAY,SAChBR,EAAIc,OA6KN,SAASC,EAAoBC,EAA2Bd,GAMtD,MAAO,CAAEG,EAJPH,GACCN,KAAKqB,KAAK,GAAKD,EAAME,YAAYC,EAC/BvB,KAAKqB,KAAK,GAAK,EAAKD,EAAME,YAAYE,GAE/Bd,EADJJ,GAAS,IAASc,EAAME,YAAYE,IAmBvC,SAASC,EAAYC,EAAqBC,EAAcC,GAG9D,IAAIC,EAAS,CAAEC,IAAK,EAAGC,IAAK,GAOvBC,EAAO,EAAa,MALzBH,EAASH,EAAU9B,MAAMqC,QAAO,SAACC,EAAad,GAAW,MAAO,CAAEU,IAAK9B,KAAK8B,IAAII,EAAYJ,IAAKV,EAAME,YAAYE,GAAIO,IAAK/B,KAAK+B,IAAIG,EAAYH,IAAKX,EAAME,YAAYE,MAAOK,IAE/JE,KAAQF,EAAOC,IAAO,EAAI,EAGtB,GAEfK,EAAgBnC,KAAKoC,MAAMR,EAAOI,GAGlCK,EAAeV,EAAQ,EAAI5B,EAG/B,GAFAsC,EAAerC,KAAKoC,MAAMC,GAEvBX,EAAU9B,MAAM0C,OAAS,EAC5B,CAEE,IADA,IAAIC,EAAK,CAAET,IAAKU,OAAOC,UAAWV,IAAKS,OAAOE,WACtCC,EAAI,EAAGA,EAAEjB,EAAU9B,MAAM0C,OAAQK,IACzC,CACE,IAAIC,EAAMzB,EAAoBO,EAAU9B,MAAM+C,GAAI,IAClDJ,EAAGT,IAAM9B,KAAK8B,IAAIc,EAAInC,EAAG8B,EAAGT,KAC5BS,EAAGR,IAAM/B,KAAK+B,IAAIa,EAAInC,EAAG8B,EAAGR,KAG9BM,EAAeV,GAAc,IADnBY,EAAGR,IAAMQ,EAAGT,IAAM,GAAS/B,IAAY,GAASA,GAAY,IACpCA,EAClCsC,EAAerC,KAAKoC,MAAMC,GAE7B,OAAOrC,KAAK8B,IAAIK,EAAeE,GCzWhC,IA0GeQ,EA1GkL,SAAC,GAAmF,IAAlFzD,EAAiF,EAAjFA,GAAIuC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,OAAQkB,EAA8D,EAA9DA,OAAQC,EAAsD,EAAtDA,SAAUxC,EAA4C,EAA5CA,SAAUyC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAAc,EAEhPC,mBAAS,CAAC1C,EAAG,EAAGC,EAAG,IAF6N,mBAEzQ0C,EAFyQ,KAE/PC,EAF+P,OAIlPF,mBAA0C,MAJwM,mBAIzQG,EAJyQ,KAIhQC,EAJgQ,KAMhRC,qBAAU,WACN,IACIpD,EAD2BqD,SAASC,eAAetE,GAC3CuE,WAAW,MACpBvD,IAECA,EAAIwD,KAAO,cAGfL,EAAWnD,KACZ,IAGHoD,qBAAU,WACNK,QAAQC,IAAI,cAAenC,EAAOC,KACnC,CAACD,EAAOC,IAGX4B,qBAAU,WACHF,GAAWF,EAAS3C,GAAK2C,EAAS1C,IAEjC4C,EAAQS,UAAU,EAAE,EAAEpC,EAAMC,GACzBmB,GAEC5C,EAASmD,EAASF,EAAUF,EAAUH,EAAUxC,MAIzD,CAAC6C,EAAUzB,EAAOC,EAAQ0B,EAASP,IAGtCS,qBAAU,WACI,eAAPpE,GAGIkE,GAECO,QAAQC,IAAI,4BAIrB,CAACR,IAGJE,qBAAU,WACN,GAAGP,GAAaK,EAChB,CACIO,QAAQC,IAAI,SAAUb,EAAWC,GACjCI,EAAQS,UAAU,EAAE,EAAEpC,EAAMC,GDsQjC,SAAsCxB,EAA8BsB,EAAqBwB,EAAiB3C,GAC/G,IAAK,IAAIoC,EAAI,EAAGA,EAAIjB,EAAU9B,MAAM0C,OAAQK,IAAK,CAC/C,IAAIqB,EAActC,EAAU9B,MAAM+C,GAC9BC,EAAMzB,EAAoB6C,EAAad,GAC3C/C,EACEC,EACA,CAAEK,EAAGL,EAAI6D,OAAOtC,MAAQ,EAAIiB,EAAInC,EAAGC,EAAEN,EAAI6D,OAAOrC,OAAS,EAAIgB,EAAIlC,GACjEwC,EACAc,EACAzD,IC9QM2D,CAA6BZ,EAASL,EAAWC,EAAU3C,GAE3DsD,QAAQC,IAAI,UAAWR,EAAQM,MAE/BC,QAAQC,IAAI,eAEZ,IAAIK,EAAcb,EAAQa,YAAY,oBACtCb,EAAQc,WAAW,oBAAqBzC,EAAQwC,EAAYxC,OAAS,EAAG,IAExEwC,EAAcb,EAAQa,YAAY,YAClCb,EAAQe,SAAS,YAAa1C,EAAQwC,EAAYxC,OAAS,EAAGC,EAAS,OAG5E,CAACqB,EAAWC,IAwBf,OACI,4BACI9D,GAAIA,EACJuC,MAAOA,EACPC,OAAQA,EACR0C,MAAO,CAACC,OAAO,oBAAqBlE,SAAU,WAAYyC,OAAQA,GAGlE0B,YA7BgB,SAACC,GACrBA,EAAMC,iBACND,EAAME,UAEN,IAAIC,EAAc,CAACnE,EAAGgE,EAAMI,QAASnE,EAAG+D,EAAMK,SAE9CzB,EAAYuB,IAwBR5B,QArBY,SAACyB,GACjBA,EAAMC,iBACND,EAAME,UAEN,IAAIC,EAAc,CAACnE,EAAGgE,EAAMI,QAASnE,EAAG+D,EAAMK,SAC9CzB,EAAYuB,GACT5B,GAECA,EAAQ4B,OC9EhBG,EAAe,CAClB,CAACxD,EAAG,EAAIC,EAAG,GAAI,CAACD,EAAG,EAAIC,GAAI,GAAI,CAACD,EAAG,EAAGC,GAAI,GAAI,CAACD,GAAI,EAAGC,EAAG,GAAI,CAACD,GAAI,EAAGC,EAAG,GAAK,CAACD,EAAG,EAAGC,EAAG,IA4IzEwD,EAzIO,WAAO,IAAD,EAEA7B,mBAAS,GAFT,mBAEnBxB,EAFmB,KAEZsD,EAFY,OAGE9B,mBAAS,GAHX,mBAGnBvB,EAHmB,KAGXsD,EAHW,OAMM/B,mBAAS,IANf,mBAMnBD,EANmB,KAMTiC,EANS,OAQMhC,mBAAsB,MAR5B,mBAQnBJ,EARmB,KAQTqC,EARS,OASkBjC,mBAAmB,IATrC,mBASnBkC,EATmB,KASHC,EATG,OAWQnC,mBAAoB,CAACvD,MAAO,KAXpC,mBAWnBqD,EAXmB,KAWRsC,EAXQ,KAa1B/B,qBAAU,WACNK,QAAQC,IAAI,sBAAuB0B,OAAOC,WAAYD,OAAOE,aAC7DT,EAASO,OAAOC,YAChBP,EAAUM,OAAOE,aAEjB,IAAIC,EAAclE,EAAY,CAAC7B,MAAM,IAAK4F,OAAOC,WAAYD,OAAOE,aAEpE7B,QAAQC,IAAI,oBAAqB6B,GACjCR,EAAYQ,KAEb,IAGHnC,qBAAU,WACRK,QAAQC,IAAInE,GAEZ,IASIiG,EC/DD,SAAsBC,GAC3B,IAAK,IAAIlD,EAAIkD,EAAMvD,OAAS,EAAGK,EAAI,EAAGA,IAAK,CAEzC,IAAImD,EAAI9F,KAAKoC,MAAMpC,KAAK+F,UAAYpD,EAAI,IAEpCqD,EAAOH,EAAMlD,GACjBkD,EAAMlD,GAAKkD,EAAMC,GACjBD,EAAMC,GAAKE,EAGb,OAAOH,EDqDcI,CATDtG,EAAKC,MAAMsG,KAAI,SAAAC,GAE/B,IADA,IAAIC,EAAI,GACAzD,EAAI,EAAGA,EAAEwD,EAAErG,SAAU6C,IAC3ByD,EAAEC,KAAKF,EAAEtG,KAAKT,IAEhB,OAAOgH,KACNE,QAKHzC,QAAQC,IAAI,eAAgB8B,GAE5B,IAAI/F,EAAOF,EAAKC,MAAM2G,MAAK,SAAA9F,GAAC,OAAIA,EAAEZ,KAAKT,KAAOwG,EAAa,MACvD7C,EAAWlD,EAAOA,EAAKA,KAAO,KAElCuF,EAAYrC,GACZuC,EAAkBM,KAEjB,IAGHpC,qBAAU,WACR,IAAIgD,EAAWC,UAAUC,UAAUC,cAAcC,MAAM,WACvD/C,QAAQC,IAAI,aAAc2C,UAAUC,WACpC7C,QAAQC,IAAI,aAAc2C,UAAUC,UAAUC,eAC9C9C,QAAQC,IAAI,aAAc2C,UAAUC,UAAUC,cAAcC,MAAM,YAC9DJ,EACF3C,QAAQC,IAAI,YAAY,GAExBD,QAAQC,IAAI,YAAY,GAG1BD,QAAQC,IAAI,mBAAoB2C,UAAUI,kBAC3C,IA6DD,OACE,kBAAC,IAAMC,SAAP,KACGnF,GAASC,GACR,kBAAC,IAAMkF,SAAP,KAEE,kBAAC,EAAD,CAAQ1H,GAAI,aAAcuC,MAAOA,EAAOC,OAAQA,EAAQkB,OAAQ,EAAGC,SAAU,KAAMxC,SAAUb,EAAiBsD,QAAS,KAAMC,UAAWA,EAAWC,SAAUA,IAC7J,kBAAC,EAAD,CAAQ9D,GAAI,aAAcuC,MAAOA,EAAOC,OAAQA,EAAQkB,OAAQ,EAAGC,SAAUA,EAAUxC,SAAUb,EAAiBsD,QAhEtG,SAAC3C,GACnBwD,QAAQC,IAAI,qBAAsBzD,GAGpC,IAAIiB,EAAc,CAACC,EAAG,EAAGC,EAAG,GAO5B,GAN8B,IAA3ByB,EAAUrD,MAAM0C,SAClBhB,EF+MI,SAA6ByF,EAAazG,GAC/C,IAAIiB,GAAMvB,KAAKqB,KAAK,GAAK,EAAK0F,EAAMtG,EAAK,EAAI,EAAKsG,EAAMrG,GAAKJ,EACzDkB,EAAM,EAAI,EAAKuF,EAAMrG,EAAKJ,EAE9B,MAAO,CAAEiB,EAAGvB,KAAKgH,MAAMzF,GAAIC,EAAGxB,KAAKgH,MAAMxF,IEnN1ByF,CAAoB,CAACxG,EAAGJ,EAASI,EAAIkB,EAAM,EAAGjB,EAAGL,EAASK,EAAIkB,EAAO,GAAIsB,SAI+BgE,IAAtGjE,EAAUrD,MAAM2G,MAAK,SAAAJ,GAAC,OAAIA,EAAE7E,YAAYC,IAAMD,EAAYC,GAAK4E,EAAE7E,YAAYE,IAAMF,EAAYE,KAChH,CAOA,GAA8B,IAA3ByB,EAAUrD,MAAM0C,OAAa,CAC/B,IAAI6E,EAAU,EACVC,GAAW,EAFgB,aAI9B,IAAIC,EAAuB/F,EAAYC,EAAIwD,EAAaoC,GAAS5F,EAA7D8F,EAAmE/F,EAAYE,EAAIuD,EAAaoC,GAAS3F,EAC7G4F,OAA2HF,IAAhHjE,EAAUrD,MAAM2G,MAAK,SAAAJ,GAAC,OAAIA,EAAE7E,YAAYC,IAAM8F,GAAsBlB,EAAE7E,YAAYE,IAAM6F,KACnGF,KAHD,GAAI,WAIMC,GAAaD,EAAUpC,EAAazC,QAC9C,IAAI8E,EAGH,YADAvD,QAAQyD,KAAK,iBAAkBhG,GAMjC,IAAIiG,EAAY,eAAOtE,EAAP,CAAkBrD,MAAM,GAAD,mBAAMqD,EAAUrD,OAAhB,gBAA2BmD,EAA3B,CAA6CzB,oBAE9EkG,EAAiB,YAAOnC,GAC9B,GAAGmC,EAAkBlF,OAAS,EAC9B,CAAC,IAAD,EACCkF,EAAkBC,QACf,IAAMC,EAAW,UAAG/H,EAAKC,MAAM2G,MAAK,SAAA9F,GAAC,OAAIA,EAAEZ,KAAKT,KAAOoI,EAAkB,aAAxD,aAAG,EAA0D3H,KAE9EuF,EAAYsC,GAA4B,WAGxCtC,EAAY,MAGhBvB,QAAQC,IAAI,oBAAqB0D,GACjC3D,QAAQC,IAAI,eAAgByD,GAE5B,IAAII,EAAUlG,EAAY8F,EAAc5F,EAAOC,GAE7CuD,EAAYwC,GACZpC,EAAagC,GACbjC,EAAkBkC,QA1CnB3D,QAAQyD,KAAK,4BAA6BhG,IAmDqG2B,UAAW,KAAMC,SAAUA,OE/IzJ0E,QACW,cAA7BpC,OAAOqC,SAASC,UAEe,UAA7BtC,OAAOqC,SAASC,UAEhBtC,OAAOqC,SAASC,SAASlB,MACvB,2DCZNmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxE,SAASC,eAAe,SDiIpB,kBAAmB+C,WACrBA,UAAUyB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,a","file":"static/js/main.f894004f.chunk.js","sourcesContent":["export enum FieldType {\r\n    Water = 0,\r\n    Earth,\r\n    Forest,\r\n    Desert\r\n  }\r\n\r\n\r\nexport interface Coordinates {\r\n    q: number;\r\n    r: number;\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport interface Tile {\r\n    id: number;\r\n    name?: string;\r\n\r\n    center: FieldType;\r\n    edges?: FieldType[];\r\n}\r\n\r\nexport interface TileWithCoordinates extends Tile {\r\n    coordinates: Coordinates;\r\n}\r\nexport interface QuantifiedTile {\r\n    tile:Tile;\r\n    quantity:number;\r\n}\r\nexport interface Deck {\r\n    tiles: QuantifiedTile[];\r\n}\r\n\r\nexport interface Playfield {\r\n    tiles: TileWithCoordinates[];\r\n}","\r\nimport { Tile, FieldType, Deck } from '../types/tile';\r\n\r\n\r\n\r\n\r\nconst tile_001: Tile = {\r\n  id: 1,\r\n  name: \"Toute eau\",\r\n  center: FieldType.Water,\r\n  edges: [FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water, FieldType.Water],\r\n};\r\n\r\nconst tuile2 = {\r\n  id: 2,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile3 = {\r\n  id: 3,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile4 = {\r\n  id: 4,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"blue\", \"brown\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile5 = {\r\n  id: 5,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"blue\", \"blue\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile6 = {\r\n  id: 6,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile7 = {\r\n  id: 7,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile8 = {\r\n  id: 8,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"blue\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile9 = {\r\n  id: 9,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile10 = {\r\n  id: 10,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"blue\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile11 = {\r\n  id: 11,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"brown\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile12 = {\r\n  id: 12,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile13 = {\r\n  id: 13,\r\n  centre: \"blue\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"brown\", \"brown\"],\r\n};\r\n\r\n\r\n\r\nconst tile_014: Tile = {\r\n  id: 14,\r\n  name: \"Toute eau simple\",\r\n  center: FieldType.Water,\r\n};\r\n\r\n\r\nconst tuile101 = {\r\n  id: 101,\r\n  name: \"Ilot central\",\r\n  centre: \"brown\",\r\n  cotes: [\"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile102 = {\r\n  id: 102,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile103 = {\r\n  id: 103,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile104 = {\r\n  id: 104,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"blue\", \"brown\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile105 = {\r\n  id: 105,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"blue\", \"blue\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile106 = {\r\n  id: 106,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"blue\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile107 = {\r\n  id: 107,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile108 = {\r\n  id: 108,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"blue\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile109 = {\r\n  id: 109,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"blue\", \"blue\"],\r\n};\r\n\r\nconst tuile110 = {\r\n  id: 110,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"blue\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile111 = {\r\n  id: 111,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"blue\", \"brown\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile112 = {\r\n  id: 112,\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"brown\", \"blue\"],\r\n};\r\n\r\nconst tuile113 = {\r\n  id: 113,\r\n  name: \"Toute terre\",\r\n  centre: \"brown\",\r\n  cotes: [\"brown\", \"brown\", \"brown\", \"brown\", \"brown\", \"brown\"],\r\n};\r\n\r\n\r\nconst exp = {\r\n  \r\n}\r\n\r\nexport const defaultPatterns = ['#7dd1ff', '#a65a35'];\r\n\r\nconst deck:Deck = {tiles:[\r\n  { tile: tile_001, quantity: 3 },\r\n  { tile: tile_014, quantity: 1 },\r\n  // { tuile: tuile3, quantite: 1 },\r\n  // { tuile: tuile4, quantite: 1 },\r\n  // { tuile: tuile5, quantite: 1 },\r\n  // { tuile: tuile6, quantite: 1 },\r\n  // { tuile: tuile7, quantite: 1 },\r\n  // { tuile: tuile8, quantite: 1 },\r\n  // { tuile: tuile9, quantite: 1 },\r\n  // { tuile: tuile10, quantite: 1 },\r\n  // { tuile: tuile11, quantite: 1 },\r\n  // { tuile: tuile12, quantite: 1 },\r\n  // { tuile: tuile13, quantite: 1 },\r\n  // { tuile: tuile101, quantite: 3 },\r\n  // { tuile: tuile102, quantite: 1 },\r\n  // { tuile: tuile103, quantite: 1 },\r\n  // { tuile: tuile104, quantite: 1 },\r\n  // { tuile: tuile105, quantite: 1 },\r\n  // { tuile: tuile106, quantite: 1 },\r\n  // { tuile: tuile107, quantite: 1 },\r\n  // { tuile: tuile108, quantite: 1 },\r\n  // { tuile: tuile109, quantite: 1 },\r\n  // { tuile: tuile110, quantite: 1 },\r\n  // { tuile: tuile111, quantite: 1 },\r\n  // { tuile: tuile112, quantite: 1 },\r\n  // { tuile: tuile113, quantite: 1 },\r\n\r\n]};\r\n\r\nexport default deck;\r\n","\r\nimport { Tile, Point, TileWithCoordinates, Playfield } from '../types/tile';\r\n\r\nconst cosPiSur6 = Math.cos(Math.PI / 6);\r\nconst sinPiSur6 = 1 / 2; // (1/2)\r\n\r\nexport function drawTile(ctx:CanvasRenderingContext2D , position:Point, size:number, tile:Tile, patterns:string[]) {\r\n  // console.log(\"drawTuile\", tuile, \" at \", x , \"x\", y);\r\n\r\n  const innerLength = size / 3;\r\n\r\n  const x = position.x;\r\n  const y = position.y;\r\n  const l = size;\r\n\r\n  if(!tile)\r\n  {\r\n    drawFilledHex(ctx, position, size);\r\n    return;\r\n  }\r\n\r\n  if(!tile.edges)\r\n  {\r\n    ctx.fillStyle = patterns[tile.center];\r\n    drawFilledHex(ctx, position, size); // set patterns[tile.center];\r\n    return;\r\n  }\r\n\r\n\r\n  // Gauche\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = patterns[tile.edges[0]];\r\n\r\n  ctx.fill();\r\n\r\n  // Bas gauche\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x, y + l);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[1]];\r\n  ctx.fill();\r\n\r\n  // Bas droit\r\n  ctx.beginPath();\r\n  ctx.moveTo(x, y + l);\r\n  ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[2]];\r\n  ctx.fill();\r\n\r\n  // Droite\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[3]];\r\n  ctx.fill();\r\n\r\n  // Haut droit\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[4]];\r\n  ctx.fill();\r\n\r\n  // Haut gauche\r\n  ctx.beginPath();\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.closePath();\r\n  ctx.fillStyle = patterns[tile.edges[5]];\r\n  ctx.fill();\r\n\r\n  // Hexagone central\r\n  ctx.beginPath();\r\n  ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y + innerLength);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n  ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.lineTo(x, y - innerLength);\r\n  ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = patterns[tile.center];\r\n\r\n  ctx.fill();\r\n}\r\n\r\n// function drawCircle(ctx, x, y, l) {\r\n//   ctx.beginPath();\r\n//   ctx.arc(x, y, l, 0, 2 * Math.PI);\r\n//   ctx.stroke();\r\n// }\r\n\r\n// function drawHex(ctx, x, y, l) {\r\n//   ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x, y + l);\r\n//   ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n\r\n//   ctx.strokeStyle = \"orange\";\r\n//   ctx.stroke();\r\n// }\r\n\r\nfunction drawFilledHex(ctx:CanvasRenderingContext2D, position:Point, size:number) {\r\n\r\n  const x = position.x;\r\n  const y = position.y;\r\n  const l = size;\r\n\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x, y + l);\r\n  ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n  ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n  ctx.lineTo(x, y - l);\r\n  ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = \"orange\";\r\n  ctx.fill();\r\n}\r\n\r\n// function drawSimpleTuile(ctx, x, y, l) {\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x, y + l);\r\n//   ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"orange\";\r\n//   ctx.fill();\r\n\r\n//   let innerLength = l / 3;\r\n\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"red\";\r\n//   ctx.fill();\r\n// }\r\n\r\n// function drawTuile(ctx, x, y, l, tuile, patterns) {\r\n//   // console.log(\"drawTuile\", tuile, \" at \", x , \"x\", y);\r\n\r\n//   let innerLength = l / 3;\r\n\r\n//   // Gauche\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"orange\";\r\n\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[0]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n\r\n//   ctx.fill();\r\n\r\n//   // Bas gauche\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x, y + l);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"red\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[1]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Bas droit\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x, y + l);\r\n//   ctx.lineTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"blue\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[2]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Droite\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x + l * cosPiSur6, y + l * sinPiSur6);\r\n//   ctx.lineTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"green\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[3]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Haut droit\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x + l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"pink\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[4]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Haut gauche\r\n//   ctx.beginPath();\r\n//   ctx.lineTo(x, y - l);\r\n//   ctx.lineTo(x - l * cosPiSur6, y - l * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.closePath();\r\n//   ctx.fillStyle = \"yellow\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.cotes[5]];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n\r\n//   // Hexagone central\r\n//   ctx.beginPath();\r\n//   ctx.moveTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y + innerLength);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y + innerLength * sinPiSur6);\r\n//   ctx.lineTo(x + innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.lineTo(x, y - innerLength);\r\n//   ctx.lineTo(x - innerLength * cosPiSur6, y - innerLength * sinPiSur6);\r\n//   ctx.closePath();\r\n\r\n//   ctx.fillStyle = \"brown\";\r\n//   if (tuile) {\r\n//     ctx.fillStyle = patterns[tuile.centre];\r\n//     // ctx.fillStyle = pattern;\r\n//   }\r\n//   ctx.fill();\r\n// }\r\n\r\n\r\n// export function drawPlayField(ctx:CanvasRenderingContext2D, playField) {\r\n//   for (let i = 0; i < playField.length; i++) {\r\n//     let tuileInPlay = playField[i];\r\n//     drawTile(\r\n//       ctx,\r\n//       tuileInPlay.mousePos.x,\r\n//       tuileInPlay.mousePos.y,\r\n//       50,\r\n//       tuileInPlay.tuile\r\n//     );\r\n//   }\r\n// }\r\n\r\n// https://www.redblobgames.com/grids/hexagons/#pixel-to-hex\r\nexport function pixel_to_pointy_hex(point:Point, size:number) {\r\n  var q = ((Math.sqrt(3) / 3) * point.x - (1 / 3) * point.y) / size;\r\n  var r = ((2 / 3) * point.y) / size;\r\n\r\n  return { q: Math.round(q), r: Math.round(r) };\r\n  // {\r\n  // q: Math.round(q),\r\n  // r: Math.round(r)\r\n  // };\r\n}\r\n\r\n// https://www.redblobgames.com/grids/hexagons/#neighbors-axial\r\n// https://www.redblobgames.com/grids/hexagons/#hex-to-pixel-axial\r\n\r\nfunction pointy_hex_to_pixel(tuile:TileWithCoordinates, size:number) {\r\n  var x =\r\n    size *\r\n    (Math.sqrt(3) * tuile.coordinates.q +\r\n      (Math.sqrt(3) / 2) * tuile.coordinates.r);\r\n  var y = size * ((3 / 2) * tuile.coordinates.r);\r\n  return { x, y };\r\n}\r\n\r\nexport function drawPlayFieldWithCoordinates(ctx:CanvasRenderingContext2D, playField:Playfield, tileSize:number, patterns:string[]) {\r\n  for (let i = 0; i < playField.tiles.length; i++) {\r\n    let tuileInPlay = playField.tiles[i];\r\n    var pos = pointy_hex_to_pixel(tuileInPlay, tileSize);\r\n    drawTile(\r\n      ctx,\r\n      { x: ctx.canvas.width / 2 + pos.x, y:ctx.canvas.height / 2 + pos.y},\r\n      tileSize,\r\n      tuileInPlay,\r\n      patterns\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function computeSize(playField:Playfield, width:number, height:number) {\r\n  \r\n  // Size for height\r\n\tlet minMax = { min: 0, max: 0};\r\n\t\r\n\tminMax = playField.tiles.reduce((accumulator, tuile) => {return { min: Math.min(accumulator.min, tuile.coordinates.r), max: Math.max(accumulator.max, tuile.coordinates.r)};}, minMax);\r\n\t\t\r\n\tlet nb = minMax.max + (-minMax.min) + 1 + 2;\r\n\r\n\t// let coef = 2 + (nb-1) * (1 + Math.sin(Math.PI/6));\r\n  let coef = 2 + (nb-1) * 1.5;\r\n  \r\n  let sizeForHeight = Math.floor(height/coef);\r\n\r\n  // Size for width\r\n  let sizeForWidth = width / 6 / cosPiSur6;\r\n  sizeForWidth = Math.floor(sizeForWidth);\r\n\r\n  if(playField.tiles.length > 0)\r\n  {\r\n    let mM = { min: Number.MAX_VALUE, max: Number.MIN_VALUE};\r\n    for(let i = 0; i<playField.tiles.length; i++ )\r\n    {\r\n      let pos = pointy_hex_to_pixel(playField.tiles[i], 10); // size does not matter\r\n      mM.min = Math.min(pos.x, mM.min);\r\n      mM.max = Math.max(pos.x, mM.max);\r\n    }\r\n    let nb = (mM.max - mM.min + 2 * 10 * cosPiSur6)/(2 * 10 * cosPiSur6) +2;\r\n    sizeForWidth = width / (nb * 2) / cosPiSur6;\r\n    sizeForWidth = Math.floor(sizeForWidth);\r\n  }\r\n\treturn Math.min(sizeForHeight, sizeForWidth);\r\n}","import React from 'react';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport { Tile, Playfield } from '../types/tile';\r\n\r\n// import {drawSimpleTuile} from '../helpers/renderer';\r\nimport {drawTile} from '../helpers/renderer';\r\nimport {drawPlayFieldWithCoordinates} from '../helpers/renderer';\r\n\r\n\r\nconst Canvas: React.FC<{id:string, width:number, height:number, zIndex:number, nextTile: Tile | null, patterns: string[], onClick:Function | null, playfield:Playfield|null, tileSize:number}> = ({id, width, height, zIndex, nextTile, patterns, onClick, playfield, tileSize}) => {\r\n    \r\n    const [mousePos, setMousePos] = useState({x: 0, y: 0});\r\n    \r\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        let c:HTMLCanvasElement|null = document.getElementById(id) as HTMLCanvasElement;        \r\n        let ctx = c.getContext(\"2d\");\r\n        if(ctx)\r\n        {\r\n            ctx.font = \"30px Arial\";\r\n        }\r\n\r\n        setContext(ctx);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Canvas size', width, height);\r\n    }, [width, height]);\r\n    \r\n    \r\n    useEffect(() => {        \r\n        if(context && mousePos.x && mousePos.y)\r\n        {\r\n            context.clearRect(0,0,width,height);\r\n            if(nextTile)\r\n            {\r\n                drawTile(context, mousePos, tileSize, nextTile, patterns);\r\n            }\r\n        }\r\n\r\n    }, [mousePos, width, height, context, nextTile]);\r\n\r\n\r\n    useEffect(() => {       \r\n        if(id === \"foreground\")\r\n        {\r\n            // Patterns initialisation\r\n            if(context)\r\n            {\r\n                console.log(\"Pattern initialisation\");\r\n            }\r\n        } \r\n\r\n    }, [context]);\r\n    \r\n\r\n    useEffect(() => {       \r\n        if(playfield && context)\r\n        {\r\n            console.log(\"Redraw\", playfield, tileSize);\r\n            context.clearRect(0,0,width,height);\r\n            drawPlayFieldWithCoordinates(context, playfield, tileSize, patterns );\r\n\r\n            console.log(\"context\", context.font);\r\n\r\n            console.log(\"measureText\", );\r\n\r\n            let measureText = context.measureText(\"Remaining tile 4\");\r\n            context.strokeText(\"Remaining tile 4\", (width - measureText.width) / 2, 30);\r\n            \r\n            measureText = context.measureText(\"fillText\");\r\n            context.fillText(\"fillText\", (width - measureText.width) / 2, height - 30);\r\n        } \r\n\r\n    }, [playfield, tileSize]);\r\n    \r\n\r\n    const handleMouseMove = (event:React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        \r\n        let newMousePos = {x: event.clientX, y: event.clientY};\r\n\r\n        setMousePos(newMousePos);\r\n    }\r\n    \r\n    const handleClick = (event:React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        \r\n        let newMousePos = {x: event.clientX, y: event.clientY};\r\n        setMousePos(newMousePos);\r\n        if(onClick)\r\n        {\r\n            onClick(newMousePos);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <canvas\r\n            id={id} \r\n            width={width} \r\n            height={height} \r\n            style={{border:\"1px solid #000000\", position: \"absolute\", zIndex: zIndex}}\r\n\r\n\r\n            onMouseMove={handleMouseMove}\r\n            onClick={handleClick}\r\n        />\r\n    );\r\n}\r\n\r\n  \r\nexport default Canvas;","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nimport deck from '../src/data/tuile';\r\nimport { defaultPatterns } from '../src/data/tuile';\r\n\r\nimport { shuffleArray } from './data/deck';\r\nimport { pixel_to_pointy_hex } from '../src/helpers/renderer';\r\nimport { computeSize } from '../src/helpers/renderer';\r\n\r\n\r\n\r\nimport Canvas from './components/Canvas';\r\n\r\nimport { Tile, Point, Playfield, TileWithCoordinates } from './types/tile';\r\n\r\n\r\nlet neighborhood = [\r\n\t{q: +1, r: 0},\t{q: +1, r: -1},\t{q: 0, r: -1}, {q: -1, r: 0}, {q: -1, r: +1}, {q: 0, r: +1},\r\n];\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const [width, setWidth] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n\r\n\r\n  const [tileSize, setTileSize] = useState(25);\r\n\r\n  const [nextTile, setNextTile] = useState<Tile | null>(null);\r\n  const [remainingTiles, setRemainingTiles] = useState<number[]>([]);\r\n\r\n  const [playfield, setPlayfield] = useState<Playfield>({tiles: []});\r\n\r\n  useEffect(() => {\r\n      console.log('Window initial size', window.innerWidth, window.innerHeight);\r\n      setWidth(window.innerWidth);\r\n      setHeight(window.innerHeight);\r\n\r\n      let initialSize = computeSize({tiles:[]}, window.innerWidth, window.innerHeight);\r\n      \r\n      console.log('initial tile size', initialSize);\r\n      setTileSize(initialSize);\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(deck);\r\n\r\n    let flattedDeck = deck.tiles.map(t => {\r\n      let a = [];\r\n      for(var i = 0; i<t.quantity; i++) {\r\n        a.push(t.tile.id);\r\n      }\r\n      return a;\r\n    }).flat();\r\n  \r\n  \r\n    let shuffledDeck = shuffleArray(flattedDeck);\r\n  \r\n    console.log(\"shuffledDeck\", shuffledDeck);\r\n  \r\n    let tile = deck.tiles.find(x => x.tile.id === shuffledDeck[0]);\r\n    let nextTile = tile ? tile.tile : null;\r\n    \r\n    setNextTile(nextTile);\r\n    setRemainingTiles(shuffledDeck);\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    var isMobile = navigator.userAgent.toLowerCase().match(/mobile/i);\r\n    console.log('isMobile ?', navigator.userAgent);\r\n    console.log('isMobile ?', navigator.userAgent.toLowerCase());\r\n    console.log('isMobile ?', navigator.userAgent.toLowerCase().match(/mobile/i));\r\n    if (isMobile) {\r\n      console.log('isMobile', true);\r\n    } else {\r\n      console.log('isMobile', false);\r\n    }\r\n    \r\n    console.log('maxTouchPoints ?', navigator.maxTouchPoints);\r\n}, []);\r\n\r\n\r\n  const handleClick = (position:Point) => {    \r\n    console.log(\"handleClick in app\", position);\r\n\r\n    \r\n\t\tvar coordinates = {q: 0, r: 0};\r\n\t\tif(playfield.tiles.length !== 0){\r\n\t\t\tcoordinates = pixel_to_pointy_hex({x: position.x - width/2, y: position.y - height/2}, tileSize);\r\n\t\t}\r\n\t\t\r\n\t\t// Test that space is free\r\n\t\tlet inoccupied = playfield.tiles.find(t => t.coordinates.q === coordinates.q && t.coordinates.r === coordinates.r) === undefined;\t\t\r\n\t\tif(!inoccupied)\r\n\t\t{\r\n\t\t\tconsole.warn(\"Already something here : \", coordinates);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// Test that space is adjacent\r\n\t\tif(playfield.tiles.length !== 0){\r\n\t\t\tlet counter = 0;\r\n\t\t\tlet neighbor = false;\r\n\t\t\tdo {\r\n\t\t\t\tlet checkCoordinates = {q: coordinates.q + neighborhood[counter].q, r: coordinates.r + neighborhood[counter].r };\r\n\t\t\t\tneighbor = playfield.tiles.find(t => t.coordinates.q === checkCoordinates.q && t.coordinates.r === checkCoordinates.r) === undefined ;\t\r\n\t\t\t\tcounter++;\r\n\t\t\t} while (!neighbor && (counter < neighborhood.length));\r\n\t\t\tif(!neighbor)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"No neighbor : \", coordinates);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet newPlayfield = {...playfield, tiles: [...playfield.tiles, {...nextTile as Tile, coordinates}]};\r\n    \r\n    let newRemainingTiles = [...remainingTiles];\r\n\t\tif(newRemainingTiles.length > 0)\r\n\t\t{\r\n\t\t\tnewRemainingTiles.shift();\r\n      const newNextTile = deck.tiles.find(x => x.tile.id === newRemainingTiles[0])?.tile;\r\n      \r\n      setNextTile(newNextTile ? newNextTile : null);\r\n    }\r\n    else {\r\n      setNextTile(null);\r\n    }\r\n\t\t\r\n\t\tconsole.log('newRemainingTiles', newRemainingTiles);\r\n\t\tconsole.log('newPlayfield', newPlayfield);\r\n\t\t\r\n\t\tlet newSize = computeSize(newPlayfield, width, height);\r\n    \r\n    setTileSize(newSize);\r\n    setPlayfield(newPlayfield);\r\n    setRemainingTiles(newRemainingTiles);\r\n}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {width && height && (\r\n        <React.Fragment>\r\n\r\n          <Canvas id={\"background\"} width={width} height={height} zIndex={0} nextTile={null} patterns={defaultPatterns} onClick={null} playfield={playfield} tileSize={tileSize} />\r\n          <Canvas id={\"foreground\"} width={width} height={height} zIndex={1} nextTile={nextTile} patterns={defaultPatterns} onClick={handleClick} playfield={null} tileSize={tileSize} />\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function shuffleArray(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    // Generate random number\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n// https://medium.com/javascript-in-plain-english/algorithms-101-rotate-array-in-javascript-three-solutions-260fbc923b64\r\nexport function rotateArray(array, k) {\r\n  if (array.length > k) {\r\n    array.unshift(...array.splice(-k));\r\n  } else {\r\n    let i = 0;\r\n    while (i < k) {\r\n      array.unshift(array.splice(-1));\r\n      i++;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}